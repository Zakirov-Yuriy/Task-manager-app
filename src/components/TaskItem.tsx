import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import { Task } from '../types';
import { useTheme } from './ThemeProvider';


// –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∑–∞–¥–∞—á–∏

interface TaskItemProps {
  // –û–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  task: Task;
  // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  onToggleComplete: (taskId: string) => void;
  // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
  onDelete: (taskId: string) => void;
}

/**
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–∏
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
*/
export const TaskItem: React.FC<TaskItemProps> = ({ task, onToggleComplete, onDelete }) => {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const { theme } = useTheme();

  return (
    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>
      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ */}
      <TouchableOpacity
        style={styles.checkContainer}
        onPress={() => onToggleComplete(task.id)}
      >
        {/* –ß–µ–∫–±–æ–∫—Å —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º —Ü–≤–µ—Ç–æ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <View style={[
          styles.checkbox,
          task.completed && [
            styles.checkboxChecked,
            { backgroundColor: theme.colors.primary }
          ]
        ]}>
          {/* –ì–∞–ª–æ—á–∫–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á */}
          {task.completed && (
            <Text style={[styles.checkmark, { color: theme.colors.surface }]}>
              ‚úì
            </Text>
          )}
        </View>
      </TouchableOpacity>

      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∑–∞–¥–∞—á–∏ */}
      <View style={styles.taskContent}>
        {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º —Å—Ç–∏–ª–µ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á */}
        <Text style={[
          styles.title,
          { color: theme.colors.text },
          task.completed && [
            styles.titleCompleted,
            { color: theme.colors.textMuted }
          ]
        ]}>
          {task.title}
        </Text>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å) */}
        {task.description && (
          <Text style={[
            styles.description,
            { color: theme.colors.textSecondary },
            task.completed && [
              styles.descriptionCompleted,
              { color: theme.colors.textMuted }
            ]
          ]}>
            {task.description}
          </Text>
        )}

        {/* –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ */}
        <Text style={[styles.date, { color: theme.colors.textMuted }]}>
          {task.createdAt.toLocaleDateString()}
        </Text>
      </View>

      {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ */}
      <TouchableOpacity
        style={styles.deleteButton}
        onPress={() => onDelete(task.id)}
      >
        <Text style={[styles.deleteText, { color: theme.colors.accent }]}>
          üóëÔ∏è
        </Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flexDirection: 'row',
    marginVertical: 4,
    marginHorizontal: 16,
    borderRadius: 8,
    padding: 12,
    elevation: 2,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
  },
  checkContainer: {
    marginRight: 12,
    justifyContent: 'center',
  },
  checkbox: {
    width: 24,
    height: 24,
    borderWidth: 2,
    borderRadius: 4,
    justifyContent: 'center',
    alignItems: 'center',
  },
  checkboxChecked: {
    // backgroundColor –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ theme.colors.primary
  },
  checkmark: {
    fontSize: 14,
    fontWeight: 'bold',
  },
  taskContent: {
    flex: 1,
  },
  title: {
    fontSize: 16,
    fontWeight: '600',
  },
  titleCompleted: {
    textDecorationLine: 'line-through',
  },
  description: {
    fontSize: 14,
    marginTop: 2,
  },
  descriptionCompleted: {
    // opacity –±—É–¥–µ—Ç —Å–Ω–∏–∂–µ–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
  },
  date: {
    fontSize: 12,
    marginTop: 4,
  },
  deleteButton: {
    padding: 4,
    justifyContent: 'center',
  },
  deleteText: {
    fontSize: 16,
  },
});
